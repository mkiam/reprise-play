# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /show                       controllers.Application.sayHello()
GET     /menu                       controllers.Application.menu()
POST    /person                     controllers.Application.addPerson()
POST    /login                      controllers.Application.authenticate()
GET     /logout                     controllers.Application.logout()
GET     /add                        controllers.Application.add()
GET     /show/:user                 controllers.Application.sayHelloUser(user: Long)
GET     /newRecipe                     controllers.Application.addRecipe()
GET        /allRecipe                  controllers.Application.searchRecipes()
GET       /userRecipe                 controllers.Application.myRecipes()
GET      /allRecipesWS               controllers.Application.allRecipes()
GET     /findRecipeByUserWS/:user    controllers.Application.findRecipeByUser(user: String)
GET    /findRecipeByIDWS/:id        controllers.Application.findRecipeByID(id: Long)
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
# Login page
#GET     /login                      securesocial.controllers.LoginPage.login
#GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
#GET     /signup                     securesocial.controllers.Registration.startSignUp
#POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
#GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
#POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
#GET     /reset                      securesocial.controllers.Registration.startResetPassword
#POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
#GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
#POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
#GET     /password                   securesocial.controllers.PasswordChange.page
#POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
#GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
#POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
#GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized